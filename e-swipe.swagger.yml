swagger: '2.0'
info:
  title: E-swipe
  description: Move your app forward with the Uber API
  version: 1.0.0
host: api.stardis.blue
schemes:
  - https
basePath: /v1
produces:
  - application/json
security:
  - oauth2: []
securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    tokenUrl: 'http://localhost/oauth/login?redirect_uri=null'
    scopes:
      default: user access
      email: get email
  facebook_login:
    type: apiKey
    in: header
    name: facebook_login
  auth:
    type: apiKey
    in: header
    name: auth
  login:
    type: basic

# ============== #
#=- PARAMETERS -=#
# ================================== #
parameters:
  profileUUID:
    name: uuid
    in: path
    description: UUID of an User
    required: true
    type: string
  chatUUID:
    name: uuid
    in: path
    description: UUID of a Chat
    required: true
    type: string
  eventUUID:
    name: uuid
    in: path
    description: UUID of an Event
    required: true
    type: string
  auth:
    name: auth
    in: query
    description: OAuth authentification token
    type: string
    required: true
  latitude:
    name: latitude
    in: query
    description: Latitude
    required: true
    type: number
    format: double
  longitude:
    name: longitude
    in: query
    description: Longitude
    required: true
    type: number
    format: double
  radius:
    name: raduis
    in: query
    description: 'raduis of detection (`default: 50, min: 10, max: 200` )'
    type: integer
    minimum: 10
    default: 50
    maximum: 200
  offset:
    name: offset
    type: integer
    in: query
    description: 'offset of the results (`default: 0`)'
    default: 0
  limit:
    name: limit
    type: integer
    in: query
    description: 'number of items (`default: 10, min: 10, max: 200`)'
    minimum: 10
    default: 10
    maximum: 200

# ========= #
#=- PATHS -=#
# ================================== #
paths:

  #=- User -=#
  # ========== #
  /login/:
    put:
      summary: Classic Login
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: bad login
      tags:
        - Login
      security:
        - login: []
  /login/facebook:
    put:
      summary: facebook authentification
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: bad login
      tags:
        - Login
      security:
        - facebook_login: []
  /user/:
    put:
      summary: Create a new user
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: Created
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User
  /user/{uuid}:
    get:
      summary: get user
      parameters:
        - $ref: '#/parameters/profileUUID'
        - $ref: '#/parameters/auth'
      responses:
        '200':
          description: Product
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User
  /profiles:
    get:
      summary: Get swipable users (per group of 10)
      parameters:
        - $ref: '#/parameters/auth'
        - $ref: '#/parameters/latitude'
        - $ref: '#/parameters/longitude'
        - $ref: '#/parameters/radius'
      responses:
        '200':
          description: Product
          schema:
            type: array
            items:
              $ref: '#/definitions/SwipeProfile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Swipe
  /user/{uuid}/accept:
    post:
      summary: accept
      parameters:
        - $ref: '#/parameters/profileUUID'
        - $ref: '#/parameters/auth'
      responses:
        '204':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Swipe
  /user/{uuid}/decline:
    post:
      summary: refuse
      parameters:
        - $ref: '#/parameters/profileUUID'
        - $ref: '#/parameters/auth'
      responses:
        '204':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Swipe
  /me:
    get:
      summary: my profile
      parameters:
        - $ref: '#/parameters/auth'
      responses:
        '200':
          description: test
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Profil
    patch:
      summary: update my profile
      description: |
        Used to update :
          - email
          - description
          - default_picture
          - if the profile is visible
      parameters:
        - $ref: '#/parameters/auth'
        - name: user
          in: body
          schema:
            $ref: '#/definitions/UserPatch'
      responses:
        '204':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Profil
  /me/chats:
    get:
      summary: get all my chats
      parameters:
        - $ref: '#/parameters/auth'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: list of chats
          schema:
            type: array
            items:
              $ref: '#/definitions/ShortChat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Profil
  /me/matches:
    get:
      summary: get my matches
      parameters:
        - $ref: '#/parameters/auth'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: list of profils
          schema:
            type: array
            items:
              $ref: '#/definitions/SwipeProfile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Profil
  /me/interests:
    get:
      summary: get all my interests
      parameters:
        - $ref: '#/parameters/auth'
      responses:
        '200':
          description: list of all my interests
          schema:
            type: array
            items:
              $ref: '#/definitions/Interest/properties/name'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User - Profil
    put:
      summary: add interests
      parameters:
        - $ref: '#/parameters/auth'
        - name: interests
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Interest/properties/name'
      responses:
        '201':
          description: Created
        '204':
          description: No interest modified
      tags:
        - User - Profil

  #=- Chat -=#
  # ========== #
  /chat/{uuid}:
    get:
      summary: Get chat info
      parameters:
        - $ref: '#/parameters/chatUUID'
        - $ref: '#/parameters/auth'
        - name: since
          in: query
          description: time last query (timestamp)
          type: integer
          default: 0
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: all messages of chat ordered by last message
          schema:
            $ref: '#/definitions/Chat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Chat
    post:
      summary: write message
      description: Write a message in the chat
      parameters:
        - $ref: '#/parameters/chatUUID'
        - $ref: '#/parameters/auth'
        - name: content
          in: query
          type: string
          required: true
          description: content of the message
      responses:
        '200':
          description: Success
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Chat

  #=- Event -=#
  # ========== #
  /events:
    get:
      summary: List of events
      description: Get all the events from a position
      parameters:
        - $ref: '#/parameters/auth'
        - $ref: '#/parameters/latitude'
        - $ref: '#/parameters/longitude'
        - $ref: '#/parameters/radius'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        '200':
          description: an array of events
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event
  /event/{uuid}:
    get:
      summary: Get an event
      description: get all the information about an event
      parameters:
        - $ref: '#/parameters/eventUUID'
        - $ref: '#/parameters/auth'
      responses:
        '200':
          description: Event
          schema:
            $ref: '#/definitions/Event'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event
  /event/{uuid}/participate:
    post:
      summary: accept
      parameters:
        - $ref: '#/parameters/eventUUID'
        - $ref: '#/parameters/auth'
      responses:
        '204':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event
  /event/{uuid}/refuse:
    post:
      summary: Don't participate
      parameters:
        - $ref: '#/parameters/eventUUID'
        - $ref: '#/parameters/auth'
      responses:
        '204':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event
  '/event/{uuid}/tags':
    get:
      summary: returns all the tags of the event
      parameters:
        - $ref: '#/parameters/auth'
        - $ref: '#/parameters/eventUUID'
      responses:
        '200':
          description: list of tags of the event
          schema:
            $ref: '#/definitions/Event/properties/tags'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event

# =============== #
#=- DEFINITIONS -=#
# ================================== #
definitions:

  #=- Events -=#
  # ========== #
  Event:
    type: object
    description: Event
    discriminator: uuid
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
        description: Event UUID
      name:
        type: string
        description: name of the event
      default_picture:
        $ref: '#/definitions/Image'
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
        description: Images of the event
      localisation:
        $ref: '#/definitions/Localisation'
      people:
        type: array
        items:
          $ref: '#/definitions/ShortProfile'
      tags:
        type: array
        items:
          $ref: '#/definitions/Interest'
      date_begin:
        type: string
        format: date
      date_end:
        type: string
        format: date
  ShortEvent:
    type: object
    discriminator: uuid
    required:
      - uuid
    readOnly: true
    properties:
      uuid:
        $ref: '#/definitions/Event/properties/uuid'
      name:
        $ref: '#/definitions/Event/properties/name'
      default_picture:
        $ref: '#/definitions/Image/properties/url'

  #=- User -=#
  # ======== #
  User:
    type: object
    discriminator: uuid
    required:
      - uuid
    readOnly: true
    properties:
      uuid:
        type: string
        format: uuid
        description: User UUID
      first_name:
        type: string
      last_name:
        type: string
      date_of_birth:
        type: string
        format: date
      description:
        type: string
      email:
        type: string
        format: email
      facebook_id:
        type: string
      events:
        type: array
        items:
          $ref: '#/definitions/ShortEvent'
      default_picture:
        $ref: '#/definitions/Image'
      pictures:
        type: array
        description: images of the profile.
        items:
          $ref: '#/definitions/Image'
      genders:
        type: array
        items:
          $ref: '#/definitions/Gender/properties/name'
        description: genders of the user
      looking_for:
        type: array
        items:
          $ref: '#/definitions/Gender/properties/name'
        description: looking for
      is_visible:
        type: boolean
        description: si le profil est visible
  SwipeProfile:
    type: object
    readOnly: true
    properties:
      uuid:
        $ref: '#/definitions/User/properties/uuid'
      first_name:
        $ref: '#/definitions/User/properties/first_name'
      last_name:
        $ref: '#/definitions/User/properties/last_name'
      date_of_birth:
        $ref: '#/definitions/User/properties/date_of_birth'
      default_picture:
        $ref: '#/definitions/Image/properties/url'
  ShortProfile:
    type: object
    readOnly: true
    properties:
      uuid:
        $ref: '#/definitions/User/properties/uuid'
      first_name:
        $ref: '#/definitions/User/properties/first_name'
      last_name:
        $ref: '#/definitions/User/properties/last_name'
      default_picture:
        $ref: '#/definitions/Image/properties/url'
  UserPatch:
    type: object
    properties:
      email:
        $ref: '#/definitions/User/properties/email'
      description:
        $ref: '#/definitions/User/properties/description'
      default_picture:
        $ref: '#/definitions/Image'
      is_visible:
        $ref: '#/definitions/User/properties/is_visible'
  UserCreate:
    type: object
    required:
      - first_name
      - last_name
      - date_of_birth
    properties:
      first_name:
        $ref: '#/definitions/User/properties/first_name'
      last_name:
        $ref: '#/definitions/User/properties/last_name'
      date_of_birth:
        $ref: '#/definitions/User/properties/date_of_birth'
      email:
        $ref: '#/definitions/User/properties/email'
      facebook_id:
        $ref: '#/definitions/User/properties/facebook_id'

  #=- Misc -=#
  # ======== #
  Image:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: uuid of the image
      url:
        type: string
        description: url of the image
  Gender:
    type: object
    description: Gender
    properties:
      id:
        type: integer
        description: gender type
      name:
        type: string
        description: gender name
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  Localisation:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
  Interest:
    type: object
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
      name:
        type: string

  #=- Chat -=#
  # ======== #
  Chat:
    type: object
    description: Messagerie instantanée
    readOnly: true
    discriminator: uuid
    required:
      - uuid
      - user
      - messages
    properties:
      uuid:
        type: string
        format: uuid
        description: Chat UUID
      user:
        $ref: '#/definitions/ShortProfile'
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
  ShortChat:
    type: object
    description: Messagerie instantanée
    readOnly: true
    discriminator: uuid
    required:
      - uuid
      - user
      - last_message
    properties:
      uuid:
        $ref: '#/definitions/Image/properties/uuid'
      user:
        $ref: '#/definitions/ShortProfile'
      last_message:
        $ref: '#/definitions/Message'
  Message:
    type: object
    description: A message from Chat
    required:
      - sender
      - content
    properties:
      sender:
        $ref: '#/definitions/User/properties/uuid'
      content:
        type: string
      date:
        type: string
        format: date
  Token:
    type: object
    properties:
      auth:
        type: string
