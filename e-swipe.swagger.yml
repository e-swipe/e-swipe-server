swagger: '2.0'
info:
  title: E-swipe
  description: Move your app forward with the Uber API
  version: 1.0.0
host: api.stardis.blue
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /profiles:
    get:
      summary: Get swipable users (per group of 10)
      parameters:
        - name: auth
          in: query
          description: authentification
          type: string
          required: true
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: raduis
          in: query
          description: raduis of detection default is 10 max is 200
          type: integer
          minimum: 10
          maximum: 200
      responses:
        '200':
          description: Product
          schema:
            type: array
            items:
              $ref: '#/definitions/SwipeProfile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Profiles
  /User/{uuid}:
    get:
      summary: get user
      parameters:
        - name: uuid
          in: path
          description: profile id
          required: true
          type: string
        - name: auth
          in: query
          description: authentification
          required: true
          type: string
      responses:
        '200':
          description: Product
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User
  /User/{uuid}/accept:
    get:
      summary: accept
      parameters:
        - name: uuid
          in: path
          description: profile id
          required: true
          type: string
        - name: auth
          in: query
          description: authentification
          required: true
          type: string
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User
  /User/{uuid}/decline:
    get:
      summary: refuse
      parameters:
        - name: uuid
          in: path
          description: profile id
          required: true
          type: string
        - name: auth
          in: query
          description: authentification
          required: true
          type: string
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - User
  /me:
    get:
      summary: user profile
      parameters:
        - name: auth
          in: query
          description: authentification
          type: string
          required: true
      responses:
        '200':
          description: test
          schema:
            $ref: '#/definitions/User'
      tags:
        - User
  /me/chats:
    get:
      summary: get all my chats$
      parameters:
        - name: auth
          in: query
          description: authentification
          type: string
          required: true
      responses:
        '200':
          description: list of chats
          schema:
            type: array
            items:
              $ref: '#/definitions/ShortChat'
      tags:
        - User
  /chat/{uuid}:
    get:
      summary: chat
      parameters:
        - name: uuid
          in: path
          description: uuid of chat
          type: string
          required: true
        - name: auth
          in: query
          description: authentification
          type: string
          required: true
        - name: since
          in: query
          description: time last query (timestamp)
          type: integer
          default: 0
        - name: offset
          type: integer
          in: query
          description: offset of the results, default is 0
        - name: limit
          type: integer
          in: query
          description: raduis of detection default is 10 max is 200
          minimum: 10
          maximum: 200
      responses:
        '200':
          description: all messages of chat ordered by last message
          schema:
            $ref: '#/definitions/Chat'
      tags:
        - Chat
  /events:
    get:
      summary: List of events
      description: Get all the events from a position
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: raduis
          in: query
          description: raduis of detection default is 50 max is 100
          type: integer
        - name: offset
          type: integer
          in: query
          description: 'offset of the results, default is 0'
        - name: limit
          type: integer
          in: query
          description: raduis of detection default is 10 max is 200
          minimum: 10
          maximum: 200
      responses:
        '200':
          description: an array of events
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Events
  /chat/{uuid}/writemessage:
    get:
      summary: write message
      description: Write a message in the chat
      parameters:
        - name: auth
          in: query
          description: authentification
          type: string
          required: true
        - name: content
          in: query
          type: string
          required: true
          description: content of the message
      tags:
        - Chat
  /event/{uuid}:
    get:
      summary: Get an event
      description: get all the information about an event
      parameters:
        - name: uuid
          in: path
          description: event id
          type: string
          required: true
        - name: auth
          in: query
          description: authentification
          type: string
          required: true
      responses:
        '200':
          description: Event
          schema:
            $ref: '#/definitions/Event'
      tags:
        - Event
  /event/{uuid}/participate:
    get:
      summary: accept
      parameters:
        - name: uuid
          in: path
          description: event id
          required: true
          type: string
        - name: auth
          in: query
          description: authentification
          required: true
          type: string
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event
  /event/{uuid}/refuse:
    get:
      summary: Don't participate
      parameters:
        - name: uuid
          in: path
          description: event id
          required: true
          type: string
        - name: auth
          in: query
          description: authentification
          required: true
          type: string
      responses:
        '200':
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Event
definitions:
  ShortEvent:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
        description: name of the event
      default_picture:
        $ref: '#/definitions/Image/properties/path'
  Event:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
        description: name of the event
      description:
        type: string
        description: description of the event
      default_picture:
        $ref: '#/definitions/Image/properties/path'
      images:
        type: array
        items:
          $ref: '#/definitions/Image/properties/path'
        description: Images of the event
      localisation:
        $ref: '#/definitions/Localisation'
      people:
        type: array
        items:
          $ref: '#/definitions/ShortProfile'
      date_begin:
        type: string
      date_end:
        type: string
  Localisation:
    type: object
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
  SwipeProfile:
    type: object
    properties:
      uuid:
        type: string
        description: id
      first_name:
        type: string
      last_name:
        type: string
      age:
        type: integer
      default_picture:
        $ref: '#/definitions/Image/properties/path'
  ShortProfile:
    type: object
    properties:
      uuid:
        type: string
        description: id
      first_name:
        type: string
      last_name:
        type: string
      default_picture:
        $ref: '#/definitions/Image/properties/path'
  User:
    type: object
    properties:
      uuid:
        type: string
        description: id
      first_name:
        type: string
      last_name:
        type: string
      age:
        type: integer
      description:
        type: string
      email:
        type: string
      facebook_id:
        type: string
      events:
        type: array
        items:
          $ref: '#/definitions/ShortEvent'
      default_picture:
        $ref: '#/definitions/Image/properties/path'
      pictures:
        type: array
        items:
          $ref: '#/definitions/Image/properties/path'
        description: images of the profile.
      genders:
        type: array
        items:
          $ref: '#/definitions/Gender/properties/name'
        description: genders of the user
      looking_for:
        type: array
        items:
          $ref: '#/definitions/Gender/properties/name'
        description: looking for
      is_visible:
        type: boolean
        description: si le profil est visible
  Image:
    type: object
    properties:
      uuid:
        type: string
        description: uuid of the image
      path:
        type: string
        description: url of the image
  Gender:
    type: object
    description: Gender
    properties:
      id:
        type: string
        description: gender type
      name:
        type: string
        description: gender name
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  ShortChat:
    type: object
    description: Messagerie instantanée
    properties:
      uuid:
        type: string
      user:
        $ref: '#/definitions/ShortProfile'
      last_message:
        $ref: '#/definitions/Message'
  Chat:
    type: object
    description: Messagerie instantanée
    properties:
      uuid:
        type: string
      user:
        $ref: '#/definitions/ShortProfile'
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
  Message:
    type: object
    description: A message from Chat
    properties:
      sender:
        $ref: '#/definitions/User/properties/uuid'
      content:
        type: string
      date:
        type: string
